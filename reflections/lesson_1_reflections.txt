How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It highlighted lines that were different, added, or deleted.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Yes, definitely.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The main pro is that you don't have endless versions to sort through.  The 
    con is that you might forget to commit often enough and then lose changes
    or make too many changes in one commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    When working in a word processor, you usually only need to change that one 
    file at a time.  When developing, we need to change multiple files to create
    one end product - the web page.

How can you use the commands git log and git diff to view the history of files?

    They tell you the information about the commits that were made and the
    specific differences between files.

How might using version control make you more confident to make changes that
could break something?

    If I knew I wouldn't lose a prior working version, I would definitely be 
    more confident in experimenting.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use git for version control of my development files.